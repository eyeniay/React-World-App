{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ethem\\\\Desktop\\\\Git\\\\Pokemon D\\\\React-World-App\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ethem\\\\Desktop\\\\Git\\\\Pokemon D\\\\React-World-App\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ethem\\\\Desktop\\\\Git\\\\Pokemon D\\\\React-World-App\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ethem\\\\Desktop\\\\Git\\\\Pokemon D\\\\React-World-App\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\ethem\\\\Desktop\\\\Git\\\\Pokemon D\\\\React-World-App\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\ethem\\\\Desktop\\\\Git\\\\Pokemon D\\\\React-World-App\\\\src\\\\Country.js\";\nimport React, { Component } from \"react\";\n\nvar Country =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Country, _Component);\n\n  function Country() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Country);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Country)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      AllCountries: []\n    };\n\n    _this.LoadCountries = function () {\n      var countries = _this.state.AllCountries.map(function (item) {\n        if (item.region === _this.props.region) {\n          return React.createElement(\"div\", {\n            className: \"gallery\",\n            onClick: function onClick() {\n              return _this.getCountry(item);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 22\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: item.flag,\n            alt: item.name,\n            width: \"600\",\n            height: \"400\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"desc\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24\n            },\n            __self: this\n          }, item.name));\n        }\n      });\n\n      return countries;\n    };\n\n    _this.getCountry = function (region) {\n      var filteredCountry = _this.state.AllCountries.filter(function (item) {\n        return item.numericCode === region.numericCode;\n      });\n\n      var borders = filteredCountry[0].borders.map(function (item) {\n        return _this.state.AllCountries.filter(function (country) {\n          return country.alpha3Code === item;\n        });\n      });\n\n      _this.props.country(filteredCountry, borders);\n    };\n\n    return _this;\n  }\n\n  _createClass(Country, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"https://restcountries.eu/rest/v2/all\").then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        _this2.setState({\n          AllCountries: json\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"country\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, this.LoadCountries());\n    }\n  }]);\n\n  return Country;\n}(Component);\n\nexport { Country as default };","map":{"version":3,"sources":["C:\\Users\\ethem\\Desktop\\Git\\Pokemon D\\React-World-App\\src\\Country.js"],"names":["React","Component","Country","state","AllCountries","LoadCountries","countries","map","item","region","props","getCountry","flag","name","filteredCountry","filter","numericCode","borders","country","alpha3Code","fetch","then","response","json","setState"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEqBC,O;;;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,YAAY,EAAE;AADR,K;;UAcRC,a,GAAgB,YAAM;AACpB,UAAMC,SAAS,GAAG,MAAKH,KAAL,CAAWC,YAAX,CAAwBG,GAAxB,CAA4B,UAAAC,IAAI,EAAI;AACpD,YAAIA,IAAI,CAACC,MAAL,KAAgB,MAAKC,KAAL,CAAWD,MAA/B,EAAuC;AACrC,iBACE;AAAK,YAAA,SAAS,EAAC,SAAf;AAAyB,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAKE,UAAL,CAAgBH,IAAhB,CAAN;AAAA,aAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAK,YAAA,GAAG,EAAEA,IAAI,CAACI,IAAf;AAAqB,YAAA,GAAG,EAAEJ,IAAI,CAACK,IAA/B;AAAqC,YAAA,KAAK,EAAC,KAA3C;AAAiD,YAAA,MAAM,EAAC,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAuBL,IAAI,CAACK,IAA5B,CAFF,CADF;AAMD;AACF,OATiB,CAAlB;;AAWA,aAAOP,SAAP;AACD,K;;UAEDK,U,GAAa,UAAAF,MAAM,EAAI;AACrB,UAAMK,eAAe,GAAG,MAAKX,KAAL,CAAWC,YAAX,CAAwBW,MAAxB,CAA+B,UAAAP,IAAI,EAAI;AAC7D,eAAOA,IAAI,CAACQ,WAAL,KAAqBP,MAAM,CAACO,WAAnC;AACD,OAFuB,CAAxB;;AAIA,UAAMC,OAAO,GAAGH,eAAe,CAAC,CAAD,CAAf,CAAmBG,OAAnB,CAA2BV,GAA3B,CAA+B,UAAAC,IAAI,EAAI;AACrD,eAAO,MAAKL,KAAL,CAAWC,YAAX,CAAwBW,MAAxB,CAA+B,UAAAG,OAAO,EAAI;AAC/C,iBAAOA,OAAO,CAACC,UAAR,KAAuBX,IAA9B;AACD,SAFM,CAAP;AAGD,OAJe,CAAhB;;AAMA,YAAKE,KAAL,CAAWQ,OAAX,CAAmBJ,eAAnB,EAAoCG,OAApC;AACD,K;;;;;;;wCArCmB;AAAA;;AAClBG,MAAAA,KAAK,CAAC,sCAAD,CAAL,CACGC,IADH,CACQ,UAAAC,QAAQ,EAAI;AAChB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,OAHH,EAIGF,IAJH,CAIQ,UAAAE,IAAI,EAAI;AACZ,QAAA,MAAI,CAACC,QAAL,CAAc;AAAEpB,UAAAA,YAAY,EAAEmB;AAAhB,SAAd;AACD,OANH;AAOD;;;6BA+BQ;AACP,aAAO;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0B,KAAKlB,aAAL,EAA1B,CAAP;AACD;;;;EA9CkCJ,S;;SAAhBC,O","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Country extends Component {\n  state = {\n    AllCountries: []\n  };\n\n  componentDidMount() {\n    fetch(\"https://restcountries.eu/rest/v2/all\")\n      .then(response => {\n        return response.json();\n      })\n      .then(json => {\n        this.setState({ AllCountries: json });\n      });\n  }\n\n  LoadCountries = () => {\n    const countries = this.state.AllCountries.map(item => {\n      if (item.region === this.props.region) {\n        return (\n          <div className=\"gallery\" onClick={() => this.getCountry(item)}>\n            <img src={item.flag} alt={item.name} width=\"600\" height=\"400\" />\n            <div className=\"desc\">{item.name}</div>\n          </div>\n        );\n      }\n    });\n\n    return countries;\n  };\n\n  getCountry = region => {\n    const filteredCountry = this.state.AllCountries.filter(item => {\n      return item.numericCode === region.numericCode;\n    });\n\n    const borders = filteredCountry[0].borders.map(item => {\n      return this.state.AllCountries.filter(country => {\n        return country.alpha3Code === item;\n      });\n    });\n\n    this.props.country(filteredCountry, borders);\n  };\n\n  render() {\n    return <div className=\"country\">{this.LoadCountries()}</div>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}